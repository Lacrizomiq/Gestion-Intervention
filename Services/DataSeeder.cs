using GestionInterventions.Data;
using GestionInterventions.Models.Entities;

namespace GestionInterventions.Services
{
    public interface IDataSeeder
    {
        Task SeedAsync();
    }

    public class DataSeeder : IDataSeeder
    {
        private readonly ApplicationDbContext _context;

        public DataSeeder(ApplicationDbContext context)
        {
            _context = context;
        }

        public async Task SeedAsync()
        {
            // V√©rifie si la table Interventions est vide
            if (!_context.Interventions.Any())
            {
                Console.WriteLine("üå± Cr√©ation des donn√©es de test...");

                // Cr√©e une liste d'interventions de test
                var interventionsTest = new List<Intervention>
                {
                    new Intervention
                    {
                        Titre = "Panne serveur principal",
                        Description = "Le serveur principal ne r√©pond plus depuis ce matin. Intervention urgente requise.",
                        Priorite = PrioriteIntervention.Urgent,
                        Statut = StatutIntervention.EnCours
                    },
                    new Intervention
                    {
                        Titre = "Maintenance climatisation bureau 2",
                        Description = "Entretien pr√©ventif du syst√®me de climatisation au deuxi√®me √©tage.",
                        Priorite = PrioriteIntervention.Normale,
                        Statut = StatutIntervention.Nouveau
                    },
                    new Intervention
                    {
                        Titre = "R√©paration imprimante accueil",
                        Description = "L'imprimante de l'accueil fait du bourrage papier constant.",
                        Priorite = PrioriteIntervention.Basse,
                        Statut = StatutIntervention.Terminee
                    },
                    new Intervention
                    {
                        Titre = "Installation nouveau poste informatique",
                        Description = "Configuration et installation d'un nouveau poste pour le service comptabilit√©.",
                        Priorite = PrioriteIntervention.Normale,
                        Statut = StatutIntervention.EnCours
                    },
                    new Intervention
                    {
                        Titre = "Probl√®me r√©seau salle de r√©union",
                        Description = "Pas de connexion internet dans la salle de r√©union principale.",
                        Priorite = PrioriteIntervention.Haute,
                        Statut = StatutIntervention.Nouveau
                    },
                    new Intervention
                    {
                        Titre = "Changement √©cran d√©faillant",
                        Description = "L'√©cran du poste 15 affiche des lignes verticales.",
                        Priorite = PrioriteIntervention.Basse,
                        Statut = StatutIntervention.Annulee
                    },
                    new Intervention
                    {
                        Titre = "Mise √† jour syst√®me de s√©curit√©",
                        Description = "Mise √† jour critique des syst√®mes de s√©curit√© informatique.",
                        Priorite = PrioriteIntervention.Urgent,
                        Statut = StatutIntervention.Terminee
                    },
                    new Intervention
                    {
                        Titre = "Maintenance ascenseur",
                        Description = "Contr√¥le technique obligatoire de l'ascenseur principal.",
                        Priorite = PrioriteIntervention.Haute,
                        Statut = StatutIntervention.EnCours
                    },
                    new Intervention
                    {
                        Titre = "R√©paration fuite d'eau cuisine",
                        Description = "Fuite sous l'√©vier de la cuisine du personnel.",
                        Priorite = PrioriteIntervention.Normale,
                        Statut = StatutIntervention.Nouveau
                    },
                    new Intervention
                    {
                        Titre = "Remplacement n√©ons bureau",
                        Description = "Plusieurs n√©ons sont grill√©s dans le bureau principal.",
                        Priorite = PrioriteIntervention.Basse,
                        Statut = StatutIntervention.Terminee
                    },
                    new Intervention
                    {
                        Titre = "Configuration firewall",
                        Description = "Mise √† jour des r√®gles de s√©curit√© du firewall principal.",
                        Priorite = PrioriteIntervention.Haute,
                        Statut = StatutIntervention.Nouveau
                    },
                    new Intervention
                    {
                        Titre = "Probl√®me t√©l√©phone ligne 3",
                        Description = "Le t√©l√©phone de la ligne 3 ne fonctionne plus.",
                        Priorite = PrioriteIntervention.Normale,
                        Statut = StatutIntervention.EnCours
                    }
                };

                // Ajoute toutes les interventions au contexte
                _context.Interventions.AddRange(interventionsTest);

                // Sauvegarde en base de donn√©es (version async)
                await _context.SaveChangesAsync();

                Console.WriteLine($"‚úÖ {interventionsTest.Count} interventions de test cr√©√©es !");
            }
            else
            {
                Console.WriteLine("‚ÑπÔ∏è Des donn√©es existent d√©j√†, pas de seeding n√©cessaire.");
            }
        }
    }
}